#!/bin/bash

# Function to extract particular sections from the input file
function extract_section() {
    section_name=$1
    submission_file=$2
    awk -v section_name=$section_name 'BEGIN{do_print=0; regex_start="^&"section_name"$"; regex_end="^/$"} {if($0~regex_end)do_print=0; if(do_print){sub(/^ +/,"",$0); print}; if($0~regex_start)do_print=1}' $submission_file
}

function generate_input_files_and_run() {
    submission_file=$1

    # Get the filenames of two of the three generated input files
    fn_submission_script="submit_candle_job-GENERATED.sh"
    fn_default_model="default_params-GENERATED.txt"

    # Generate an "almost" version of the submission script, stored in tmp.txt
    echo "#!/bin/bash" > tmp.txt
    #extract_section "control" $submission_file | awk '{split($0, res, "="); key=res[1]; val=res[2]; print "export " toupper(key) "=" val}' >> tmp.txt
    extract_section "control" $submission_file | awk '{split($0, res, "="); key=res[1]; val=res[2]; gsub(/ /,"",key); gsub(/^ */,"",val); print "export " toupper(key) "=" val}' >> tmp.txt
    echo "\$CANDLE/wrappers/templates/scripts/run_workflows.sh" >> tmp.txt

    # Extract everything but the WORKFLOW line into tmp2.txt and insert everything up to that line into the generated submission script
    #grep -v "^export WORKFLOW=\"" tmp.txt > tmp2.txt
    cp tmp.txt tmp2.txt
    split_line=$(awk 'BEGIN{regex="^export MODEL_SCRIPT=\""} {if($0~regex)print NR}' tmp2.txt)
    awk -v split_line=$split_line '{if(NR<=split_line)print}' tmp2.txt > $fn_submission_script

    # From the WORKFLOW line determine filename of the third generated input file
    workflow=$(grep "^export WORKFLOW=\"" tmp.txt | awk -v FS="=" '{gsub(/"/,""); print tolower($2)}')
    if [ "a$workflow" == "agrid" ]; then
        wsf_ext="txt"
    else
        wsf_ext="R"
    fi
    fn_workflow_settings_file="${workflow}_workflow-GENERATED.${wsf_ext}"

    # Determine whether full path to workflow settings file is supported due to current bug in CANDLE
    if [ "a$workflow" == "abayesian" ]; then
        path_or_not="$(pwd)/"
    else
        #path_or_not=""
        path_or_not="$(pwd)/"
    fi

    # Insert the other two generated input filename settings into the generated submission script
    echo "export DEFAULT_PARAMS_FILE=\"$(pwd)/${fn_default_model}\"" >> $fn_submission_script # must be a full path in order to find the default settings
    echo "export WORKFLOW_SETTINGS_FILE=\"${path_or_not}${fn_workflow_settings_file}\"" >> $fn_submission_script # can no longer be a full path in recent develop version of CANDLE

    # Populate the rest of the submission script and make it executable
    awk -v split_line=$split_line '{if(NR>split_line)print}' tmp2.txt >> $fn_submission_script
    chmod u+x $fn_submission_script

    # Generate the default parameters file
    echo "[Global Params]" > $fn_default_model
    extract_section "default_model" $submission_file >> $fn_default_model

    # Generate the workflow settings file
    extract_section "param_space" $submission_file > tmp3.txt
    nlines=$(wc -l tmp3.txt | awk '{print $1}')
    if [ "a$workflow" == "agrid" ]; then
        cat tmp3.txt > $fn_workflow_settings_file
    else
        echo "param.set <- makeParamSet(" > $fn_workflow_settings_file
        awk -v nlines=$nlines '{if(NR<nlines){print $0 ","} else{print $0}}' tmp3.txt >> $fn_workflow_settings_file
        echo ")" >> $fn_workflow_settings_file
    fi

    rm -f tmp.txt tmp2.txt tmp3.txt

    # Run the submission script
    ./$fn_submission_script
}


# Input parameter "submission_file"
submission_file=$1

# Determine the extension of the submission file
extension=$(echo $submission_file | awk -v FS="." '{print tolower($NF)}')

# If the submission file is .sh, execute this submission script...
if [ "a$extension" == "ash" ]; then
    echo "Submitting the CANDLE submission script \"$submission_file\"... "
    ./$submission_file && echo "done" || echo "failed"

# ...if the submission file is .in, first generate the input files from this single input file, and then execute the generated submission script...
elif [ "a$extension" == "ain" ]; then
    echo "Submitting the CANDLE input file \"$submission_file\"... "
    generate_input_files_and_run $submission_file && echo "done" || echo "failed"

# ...otherwise, throw an error
else
    echo "ERROR: Unknown extension ($extension) of submission file $submission_file"
    exit
fi
