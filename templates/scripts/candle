#!/bin/bash

# Function outputting correct usage of this script
usage() {
    echo -e "Usage:"
    echo -e ""
    echo -e "  candle | candle help\t\t\t\t\t\tShow usage and exit"
    echo -e "  candle import-template <grid|bayesian|r>\t\t\tCopy CANDLE template files to the current directory"
    echo -e "  candle generate-grid <PYTHON-LIST-1> <PYTHON-LIST-2> ...\tGenerate a hyperparameter grid for the 'grid' search workflow"
    echo -e "  candle submit-job <SUBMISSION-SCRIPT>\t\t\t\tSubmit a CANDLE submission script"
    echo -e "  candle aggregate-results <EXPERIMENT-DIRECTORY>\t\tOutput a CSV file of the hyperparameters and corresponding evaluation metrics to the screen"
    echo -e ""
}

# Program option to candle command
program=$1

# Check for input program validity
echo $program | egrep "^$|^help$|^import-template$|^generate-grid$|^submit-job$|^aggregate-results$" &> /dev/null

# If an invalid program was input...
if [ ! $? -eq 0 ]; then
    echo "Error: Incorrect usage"
    usage
    exit 1

# ...otherwise...
else

    # Shift the Bash script parameter indices
    shift

    # Save all the arguments to this script to an array called args_arr
    args_arr=($@)

    # If no program or "help" is input, echo the correct usage
    echo $program | egrep "^$|^help$" &> /dev/null
    if [ $? -eq 0 ]; then
        usage
        exit 0
    fi

    # If templates are requested to be imported to the current directory, do so
    echo $program | egrep "^import-template$" &> /dev/null
    if [ $? -eq 0 ]; then
        candle-import-template "${args_arr[@]}"
        exit 0
    fi

    # If a hyperparameter grid is requested to be generated, do so
    echo $program | egrep "^generate-grid$" &> /dev/null
    if [ $? -eq 0 ]; then
        candle-generate-grid "${args_arr[@]}"
        exit 0
    fi

    # If a job is requested to be submitted, do so
    echo $program | egrep "^submit-job$" &> /dev/null
    if [ $? -eq 0 ]; then
        candle-submit-job "${args_arr[@]}"
        exit 0
    fi

    # If CANDLE job results are requested to be aggregated, do so
    echo $program | egrep "^aggregate-results$" &> /dev/null
    if [ $? -eq 0 ]; then
        candle-aggregate-results "${args_arr[@]}"
        exit 0
    fi

fi
